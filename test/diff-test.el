(defun diff-to-data (diff)
  "Helper function to create a lispy data structure from a diff."
  (let (data)
    (libgit-diff-foreach
     diff
     (lambda (delta _)
       (push `(delta
               ,(libgit-diff-delta-file-path delta)
               ,(libgit-diff-delta-file-path delta 'new)
               ,(libgit-diff-delta-nfiles delta)
               ,(libgit-diff-delta-status delta))
             data))
     (lambda (_ _)
       (push 'binary data))
     (lambda (_ hunk)
       (push `(hunk
               ,(libgit-diff-hunk-start hunk)
               ,(libgit-diff-hunk-lines hunk)
               ,(libgit-diff-hunk-start hunk 'new)
               ,(libgit-diff-hunk-lines hunk 'new)
               ,(libgit-diff-hunk-header hunk))
             data))
     (lambda (_ _ line)
       (push `(line
               ,(libgit-diff-line-origin line)
               ,(libgit-diff-line-content line))
             data)))
    (reverse data)))

(ert-deftest diff-one-file-one-hunk ()
  (with-temp-dir path
    (init)
    (commit-change "file" "Line1\nLine2\nLine3\nLine4\n")
    (commit-change "file" "Line5\nLine6\nLine7\nLine8\nLine9\nLine10\n")
    (let* ((repo (libgit-repository-open path))
           (new-tree (libgit-revparse-single repo "HEAD^{tree}"))
           (old-tree (libgit-revparse-single repo "HEAD~1^{tree}"))
           (diff (libgit-diff-tree-to-tree repo old-tree new-tree))
           (data (diff-to-data diff)))
      (should (equal data
                     '((delta "file" "file" 2 modified)
                       (hunk 1 4 1 6 "@@ -1,4 +1,6 @@\n")
                       (line ?- "Line1\n")
                       (line ?- "Line2\n")
                       (line ?- "Line3\n")
                       (line ?- "Line4\n")
                       (line ?+ "Line5\n")
                       (line ?+ "Line6\n")
                       (line ?+ "Line7\n")
                       (line ?+ "Line8\n")
                       (line ?+ "Line9\n")
                       (line ?+ "Line10\n")))))))

(ert-deftest diff-one-file-one-hunk-no-nl ()
  (with-temp-dir path
    (init)
    (commit-change "file" "Line1\nLine2\nLine3\nLine4")
    (commit-change "file" "Line5\nLine6\nLine7\nLine8\nLine9\nLine10")
    (let* ((repo (libgit-repository-open path))
           (new-tree (libgit-revparse-single repo "HEAD^{tree}"))
           (old-tree (libgit-revparse-single repo "HEAD~1^{tree}"))
           (diff (libgit-diff-tree-to-tree repo old-tree new-tree))
           (data (diff-to-data diff)))
      (should (equal data
                     '((delta "file" "file" 2 modified)
                       (hunk 1 4 1 6 "@@ -1,4 +1,6 @@\n")
                       (line ?- "Line1\n")
                       (line ?- "Line2\n")
                       (line ?- "Line3\n")
                       (line ?- "Line4")
                       (line ?> "\n\\ No newline at end of file\n")
                       (line ?+ "Line5\n")
                       (line ?+ "Line6\n")
                       (line ?+ "Line7\n")
                       (line ?+ "Line8\n")
                       (line ?+ "Line9\n")
                       (line ?+ "Line10")
                       (line ?< "\n\\ No newline at end of file\n")))))))

(ert-deftest diff-one-file-one-hunk-no-nl-old ()
  (with-temp-dir path
    (init)
    (commit-change "file" "Line1\nLine2\nLine3\nLine4")
    (commit-change "file" "Line5\nLine6\nLine7\nLine8\nLine9\nLine10\n")
    (let* ((repo (libgit-repository-open path))
           (new-tree (libgit-revparse-single repo "HEAD^{tree}"))
           (old-tree (libgit-revparse-single repo "HEAD~1^{tree}"))
           (diff (libgit-diff-tree-to-tree repo old-tree new-tree))
           (data (diff-to-data diff)))
      (should (equal data
                     '((delta "file" "file" 2 modified)
                       (hunk 1 4 1 6 "@@ -1,4 +1,6 @@\n")
                       (line ?- "Line1\n")
                       (line ?- "Line2\n")
                       (line ?- "Line3\n")
                       (line ?- "Line4")
                       (line ?> "\n\\ No newline at end of file\n")
                       (line ?+ "Line5\n")
                       (line ?+ "Line6\n")
                       (line ?+ "Line7\n")
                       (line ?+ "Line8\n")
                       (line ?+ "Line9\n")
                       (line ?+ "Line10\n")))))))

(ert-deftest diff-one-file-one-hunk-no-nl-new ()
  (with-temp-dir path
    (init)
    (commit-change "file" "Line1\nLine2\nLine3\nLine4\n")
    (commit-change "file" "Line5\nLine6\nLine7\nLine8\nLine9\nLine10")
    (let* ((repo (libgit-repository-open path))
           (new-tree (libgit-revparse-single repo "HEAD^{tree}"))
           (old-tree (libgit-revparse-single repo "HEAD~1^{tree}"))
           (diff (libgit-diff-tree-to-tree repo old-tree new-tree))
           (data (diff-to-data diff)))
      (should (equal data
                     '((delta "file" "file" 2 modified)
                       (hunk 1 4 1 6 "@@ -1,4 +1,6 @@\n")
                       (line ?- "Line1\n")
                       (line ?- "Line2\n")
                       (line ?- "Line3\n")
                       (line ?- "Line4\n")
                       (line ?+ "Line5\n")
                       (line ?+ "Line6\n")
                       (line ?+ "Line7\n")
                       (line ?+ "Line8\n")
                       (line ?+ "Line9\n")
                       (line ?+ "Line10")
                       (line ?< "\n\\ No newline at end of file\n")))))))

(ert-deftest diff-one-file-two-hunk ()
  (with-temp-dir path
    (init)
    (commit-change "file" "Line1\nLine2\nLine3\nLine4\nLine5\nLine6\nLine7\nLine8\nLine9\nLine10\n")
    (commit-change "file" "Line2\nLine3\nLine4\nLine5\nLine6\nLine7\nLine8\nLine9\n")
    (let* ((repo (libgit-repository-open path))
           (new-tree (libgit-revparse-single repo "HEAD^{tree}"))
           (old-tree (libgit-revparse-single repo "HEAD~1^{tree}"))
           (diff (libgit-diff-tree-to-tree repo old-tree new-tree))
           (data (diff-to-data diff)))
      (should (equal data
                     '((delta "file" "file" 2 modified)
                       (hunk 1 4 1 3 "@@ -1,4 +1,3 @@\n")
                       (line ?- "Line1\n")
                       (line ?  "Line2\n")
                       (line ?  "Line3\n")
                       (line ?  "Line4\n")
                       (hunk 7 4 6 3 "@@ -7,4 +6,3 @@ Line6\n")
                       (line ?  "Line7\n")
                       (line ?  "Line8\n")
                       (line ?  "Line9\n")
                       (line ?- "Line10\n")))))))

(ert-deftest diff-one-file-two-hunk-context ()
  (with-temp-dir path
    (init)
    (commit-change "file" "Line1\nLine2\nLine3\nLine4\nLine5\nLine6\nLine7\nLine8\nLine9\nLine10\n")
    (commit-change "file" "Line2\nLine3\nLine4\nLine5\nLine6\nLine7\nLine8\nLine9\n")
    (let* ((repo (libgit-repository-open path))
           (new-tree (libgit-revparse-single repo "HEAD^{tree}"))
           (old-tree (libgit-revparse-single repo "HEAD~1^{tree}"))
           (diff (libgit-diff-tree-to-tree repo old-tree new-tree '((context-lines . 1))))
           (data (diff-to-data diff)))
      (should (equal data
                     '((delta "file" "file" 2 modified)
                       (hunk 1 2 1 1 "@@ -1,2 +1 @@\n")
                       (line ?- "Line1\n")
                       (line ?  "Line2\n")
                       (hunk 9 2 8 1 "@@ -9,2 +8 @@ Line8\n")
                       (line ?  "Line9\n")
                       (line ?- "Line10\n")))))))
